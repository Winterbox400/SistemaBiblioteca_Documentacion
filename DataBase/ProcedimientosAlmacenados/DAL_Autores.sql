/*Procedimiento Almacenados Autores*/

/*Referencia de Tabla Autores*/
--CREATE TABLE Autores(
--	IdAutor INT PRIMARY KEY IDENTITY,
--	Nombre VARCHAR(50) NOT NULL,
--	Activo BIT NOT NULL DEFAULT 1
--)
----GO

USE BD_ControlBiblioteca
GO

/*Insertar Nuevo Autor*/
CREATE PROCEDURE InsertAutor
@Nombre VARCHAR(50) AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION;
			INSERT INTO Autores (Nombre)
				VALUES (@Nombre)
		SELECT SCOPE_IDENTITY();
		COMMIT TRANSACTION;
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();

		IF XACT_STATE() = 1
		BEGIN
			ROLLBACK TRANSACTION;
		END
		ELSE IF XACT_STATE() = -1
		BEGIN
			ROLLBACK TRANSACTION;
		END;
		THROW
	END CATCH
END
GO

/*Actualizar un Autor Existente*/
CREATE PROCEDURE UpdateAutor 
@Nombre VARCHAR(50),
@IdAutor INT
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION;
			UPDATE Autores 
			SET Nombre = @Nombre
			WHERE IdAutor = @IdAutor AND Activo = 1;
		SELECT SCOPE_IDENTITY();
		COMMIT TRANSACTION;
	END TRY
	BEGIN CATCH
	PRINT ERROR_MESSAGE();
		
		IF XACT_STATE() = 1
		BEGIN
			ROLLBACK TRANSACTION;
		END
		ELSE IF XACT_STATE() = -1
		BEGIN
			ROLLBACK TRANSACTION;
		END;
		THROW
	END CATCH
END
GO

/*Eliminar un Autor Existente*/
CREATE PROCEDURE DeleteAutor
@IdAutor INT
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION;
			UPDATE Autores
			Set Activo = 0
			WHERE IdAutor = @IdAutor AND Activo = 1;
			SELECT SCOPE_IDENTITY();
		COMMIT TRANSACTION;
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();

		IF XACT_STATE() = 1
		BEGIN
			ROLLBACK TRANSACTION;
		END
		ELSE IF XACT_STATE() = -1
		BEGIN
			ROLLBACK TRANSACTION;
		END;
		THROW
	END CATCH
END
GO